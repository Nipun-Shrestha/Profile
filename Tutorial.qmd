---
title: "Tutorial"
#format:
 # html:
 #   grid: 
  #    body-width: 2000px
   #   sidebar-width: 200px
    #  margin-width: 200px
code-fold: show
code-link: true
code-tools: true
highlight-style: github
bibliography: references.bib
author: 
  - name: Dr Nipun Shrestha
    url: https://ctc.usyd.edu.au/about-us/our-people/academics-research-fellows/dr-nipun-shrestha/
    orcid: 0000-0003-3542-8130
    degrees: 
      - MBBS
      - MPH
      - PhD
google-scholar: true
lightbox: true
engine: knitr
comments:
    utterances: 
      repo: Nipun-Shrestha/Profile_page

#filters:
 # - social-share
#share:
 # permalink: https://nipun-shrestha.github.io/Profile_page/Tutorial.html
  #description: "awesome page"
  #twitter: true
  #facebook: true
  #linkedin: true
---

# Meta-analysis in R

Cord clamping in pre-term babies data from the recently published individual participant data meta analysis is used for this task.[@seidler2023]

::: callout-note
Note that only summary level data is used for this tutorial.
:::

::: panel-tabset
#### Loading Packages

```{r library, warning = FALSE, message = FALSE}
library(tidyverse)
library(lubridate)
library(dplyr)
library(metafor)
library (readxl)
```

#### Loading Data

```{r data, warning = FALSE, message = FALSE}
Icomp <- read_excel("~/GitHub/Profile/Icomp.xlsx")
```
:::

## Calculate log odd ratios and corresponding sampling variances

```{r calculate odds ratio}
dat <- escalc(measure="OR", ai=Icomp$`n_event DCC`, bi=Icomp$n_non_event_DCC, ci=Icomp$`n_event ICC`, di=Icomp$n_non_event_ICC, slab =paste(Icomp$studyid), data=Icomp)
```

## Random-effects model (using log odd ratios and variances as input)

```{r model}
res <- rma(dat$yi, dat$vi, data=dat, method="FE")
```

## Helper function

```{r helper function}
mlabfun <- function(text, res) {
   list(bquote(paste(.(text),
      " (Q = ", .(formatC(res$QE, digits=2, format="f")),
      ", df = ", .(res$k - res$p),
      ", p ", .(metafor:::.pval(res$QEp, digits=2, showeq=TRUE, sep=" ")), "; ",
      I^2, " = ", .(formatC(res$I2, digits=1, format="f")), "%, ",
      tau^2, " = ", .(formatC(res$tau2, digits=2, format="f")), ")")))}
```

## Forest plot

```{r fig.height= 10, fig.width=17, dpi=400}


data_height <- nrow(dat)

#change the left bound after you have run the forest plot once
left_bound <- -8.5
#change the right bound after you have run the forest plot once
right_bound <-4

sav <- forest(res, header=TRUE, xlim=c(left_bound,right_bound), at=log(c(0.5, 0.25, 1, 4)), atransf=exp, ylim=c(-1, (data_height +3)), xlab ="Odds ratio", mlab=mlabfun("RE Model for All Studies", res), ilab=cbind(Icomp$`n_event DCC`, N_DCC, Icomp$`n_event ICC`, Icomp$N_ICC), ilab.xpos=seq(-5.8,-3.8, length = 4), slab=paste(dat$studyid), psize=1)
text(left_bound, data_height+3.5, pos=4, cex=1.3, c("DCC vs ICC Meta-analysis - Death before discharge"), font = 4)
  
text(sav$ilab.xpos, (data_height+2), pos=1, c("Events","Total","Events","Total"), cex = 1.1, font =3)
  
text(c(mean(sav$ilab.xpos[1:2]),mean(sav$ilab.xpos[3:4])), data_height+3, c("DCC","ICC"), pos=1, cex=1.3)

text(c(log(0.15),log(4)), -0.3, pos=1, c("Favours DCC", "Favours ICC"), cex=1.3)
```

# Forest plot with subgroups

Data from Cochrane review: Next-generation sequencing for guiding matched targeted therapies in people with relapsed or metastatic cancer[@kazmi2023] is used for this task.

::: panel-tabset
#### Loading Packages

```{r lib, warning = FALSE, message = FALSE}
library(tidyverse)
library(lubridate)
library(dplyr)
library(metafor)
library (readxl)
```

#### Loading Data

Loading data

```{r data1, warning = FALSE, message = FALSE}
df<- read_xlsx("~/GitHub/Profile/Subgroup.xlsx")
```
:::

## Random-effects model (using log hazard ratios and variances as input)

```{r model1 , warning= FALSE}
dat <- conv.wald(out=hr, ci.lb=ci.lb, ci.ub=ci.ub,n=ntot, data=df,slab=df$Study, transf=log)
res <- rma(yi, vi, data=dat, slab=df$Study)
```

## Helper function

```{r helper function1}
mlabfun <- function(text, res4) {
   list(bquote(paste(.(text),
      " (Q = ", .(formatC(res4$QE, digits=2, format="f")),
      ", df = ", .(res4$k - res4$p),
      ", p ", .(metafor:::.pval(res4$QEp, digits=2, showeq=TRUE, sep=" ")), "; ",
      I^2, " = ", .(formatC(res4$I2, digits=1, format="f")), "%, ",
      tau^2, " = ", .(formatC(res4$tau2, digits=2, format="f")), ")")))}
```

## Forest plot

```{r fig.height= 6, fig.width=12, dpi=400}


sav <-forest(res, xlim=c(-16, 4.6), at=log(c(0.05, 0.25, 1,2,4)), atransf=exp,
      cex=0.75, ylim=c(-1, 12), order=dat$alloc, rows=c(2:4, 7:8), xlab ="Hazard ratio", 
      addfit=FALSE, ilab=cbind(df$int, df$cont), ilab.xpos=seq(-5.8,-3.8, length = 2), 
       psize=1
      )

### set font expansion factor (as in forest() above) and use a bold font
op <- par(cex=0.75, font=2)

### add text for the subgroups
text(-16, c(5, 9), pos=4, c("Phase 2", "Phase 3"))
                               
### set par back to the original settings
par(op)
### fit random-effects model in the two subgroups and overll pooled result
res1 <- rma(yi, vi, subset=(phase=="3"), data=dat)
res2 <- rma(yi, vi, subset=(phase=="2"), data=dat)
res3 <- rma(yi, vi, data=dat)

### add summary polygons for the two subgroups and overall pooled result
addpoly(res3, row= 0,  mlab=mlabfun("RE Model for Overall", res3))
addpoly(res2, row= 1, mlab=mlabfun("RE Model for Subgroup", res2))
addpoly(res1, row= 6, mlab=mlabfun("RE Model for Subgroup", res1))

text(-16, 12, pos=4, cex=1.3, c("Subgroup analysis: Progression free Survival for Prostate Cancer based on phase of trial"), font = 4)

text(2, 10.8, pos=4, cex=0.8, c("Hazard ratio [95% CI]"), font = 4)
text(sav$ilab.xpos, 11, pos=1, c("Intervention (n)","Control (n)"), cex = 0.8, font =4)
text(c(log(0.05),log(4)), -1.5, pos=1, c("Favours Intervention", "Favours Control"), cex=0.8)
text(-14.8,                     10.8, "Study", cex=0.8, pos = 2, font =4)

### add text for the test of subgroup differences
text(-16, -1, pos=4, cex=0.8, bquote(paste("Test for Subgroup Differences: ",
     Q[M], " = ", .(formatC(res$QM, digits=2, format="f")), ", df = ", .(res$p - 1),
     ", p = ", .(formatC(res$QMp, digits=2, format="f")))))

```

# Age-standardized DALYs rate of cardiovascular disease per 100,000 population from 2001 to 2021 in South Asia by country’s GDP/capita (US\$)

The GDP per capita (inflation-adjusted) are plotted in x-axis and corresponding values of age-standardized cardiovascular disease (CVD) rates for A) Females and B) Males are plotted in y-axis. The size of bubble corresponds to the size of the population of the country. The definition of cardiovascular disease includes all eleven CVD types and is described [elsewhere](https://www.healthdata.org/research-analysis/gbd "GBD"). The data on cardiovascular disease rates were obtained from the [Global Burden of Disease](https://www.healthdata.org/research-analysis/gbd "GBD") and GDP per capita from [World Bank.](https://data.worldbank.org/indicator/NY.GDP.PCAP.CD?end=2022&locations=8S&start=2001)

::: panel-tabset
#### Loading Packages

```{r liby, warning = FALSE, message = FALSE}
library(conflicted)
library(tidyverse)
library(ggplot2)
library(gganimate)
theme_set(theme_bw())
library("gifski")
```

#### Loading Data

```{r dat, warning = FALSE, message = FALSE}
load("~/GitHub/Profile/GBD.Rdata")
dat1 <- dat1 %>% dplyr::filter(measure =="DALYs (Disability-Adjusted Life Years)") 
```
:::

#### Plotting graph

```{r dpi=400}

p <- ggplot(
dat1,
aes(x = income, y=val, size = Population, colour = Country)
) +
geom_point(show.legend = TRUE, alpha = 1) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Income per person (GDP/capita PPPS inflation-adjusted)", y = "Age-standardized DALYs rate per 100,000") +
  facet_wrap(~sex)


R <- p + transition_time(year) +
labs(title = "Year: {frame_time}") +
shadow_mark(alpha = 2, size = 2) +
  facet_wrap(~sex)
R
#animate(R, height=400, width=800, renderer=gifski_renderer())

```

# Creating Maps and Mapping data with ggplot2

::: callout-note
The shape file for Nepal can be obtained from Government of [Government of Nepal geoportalal](https://nationalgeoportal.gov.np/#/map)and availability of human resource data from [Open data Nepal](https://opendatanepal.com/dataset?category=Health&page=4).
:::

::: panel-tabset
#### Loading Packages

```{r, warning = FALSE, message = FALSE}
library (sf)
library (ggplot2)
library (viridis)
library (ggthemes)
library (tidyverse)
```

#### Loading & Preparing Data

```{r, warning = FALSE, message = FALSE}

#Loading datasets

data <- st_read("~/GitHub/Profile/districts.shp")
medical_doc <- read.csv("~/GitHub/Profile/medical_doc.csv")

#Preparing dataset

df <- medical_doc %>% mutate(across(where(is.character), toupper))
dat <- merge(data, df, by="DISTRICT")

points <- cbind(dat, st_coordinates(st_centroid(dat$geometry)))

```
:::

#### Plotting map and mapping data

```{r fig.height= 15, fig.width=17, warning = FALSE, message = FALSE}


# Plotting data

ggplot(data=dat) +geom_sf (aes(fill=Fulfilled_percent), color="black", size=0.2) + 
    scale_fill_viridis_c(option = "viridis", trans="sqrt")+ 
    geom_text(data=points, aes(x=X, y=Y, label= paste(DISTRICT)), color="darkblue", size = 2.5) + 
    ggtitle("Fullfilled percentage of sanctioned post of Medical doctors in Nepal 2072/73") +
    theme_void()

```
